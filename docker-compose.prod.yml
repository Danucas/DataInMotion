version: '3.5'

services:
  api:
    build: 
      context: .
      dockerfile: ./api/Dockerfile
    command: ./init_api
    env_file:
      - ./.env.prod
    ports:
      - 8080:8080
    depends_on: 
      - web
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.prod
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/home/app/web/datainmotion/static
    env_file:
      - ./.env.prod
    command: gunicorn -w 2 -b :8000 manage:app
    depends_on:
      - db
  db:
    image: postgres:12-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env.prod.db
  nginx:
    build: ./nginx
    restart: always
    volumes:
      - static_volume:/home/app/web/datainmotion/static
      - ./public_html:/public_html
#      - ./conf.d:/etc/nginx/conf.d/
      - ./dhparam:/etc/nginx/dhparam
      - ./certbot/conf/:/etc/nginx/ssl/
      - ./certbot/data:/usr/share/nginx/html/letsencrypt
    ports:
      - 80:80
      - 443:443
    depends_on:
      - web
    networks:
      default:
        external:
          name: snap-net
#   certbot:
#     image: certbot/certbot:latest
# ##    command: certonly --force-renewal -n --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email danrodcastillo1994@gmail.com --agree-tos --no-eff-email -d 'dnart.tech' --test-cert
# #    command: certonly --force-renewal -n --webroot --webroot-path=/usr/share/nginx/html/letsencrypt --email danrodcastillo1994@gmail.com --agree-tos --no-eff-email -d 'dnart.tech'
#     volumes:
#       - ./certbot/conf/:/etc/letsencrypt
#       - ./certbot/logs/:/var/log/letsencrypt
#       - ./certbot/data:/usr/share/nginx/html/letsencrypt
#     depends_on:
#       - nginx
volumes:
  postgres_data:
  static_volume: